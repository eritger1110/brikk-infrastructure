name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  semgrep:
    runs-on: ubuntu-latest
    name: Semgrep Security Scan
    # Always run Semgrep to catch security issues across all file types
    steps:
    - uses: actions/checkout@v4

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: |
          p/owasp-top-ten
          p/secrets
          p/security-audit
          p/python
          p/flask
          p/javascript
        generateSarif: true
      env:
        SEMGREP_TIMEOUT: 180

    - name: Upload Semgrep SARIF
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: semgrep.sarif

  secret-scan:
    runs-on: ubuntu-latest
    name: Secret Pattern Detection
    # Always run secret scanning to prevent credential leaks
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Gitleaks (PR diff)
      uses: zricethezav/gitleaks-action@v2
      with:
        config-path: .gitleaks.toml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

    - name: Upload Gitleaks SARIF
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: results.sarif

  dependency-check:
    runs-on: ubuntu-latest
    name: OWASP Dependency Check
    # Guard to avoid failing on repos that don't yet contain dependency manifests
    if: ${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml', '**/requirements.txt', '**/poetry.lock', '**/Pipfile.lock', '**/composer.lock', '**/Gemfile.lock') != '' }}
    steps:
    - uses: actions/checkout@v4

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'brikk-infrastructure'
        path: '.'
        format: 'ALL'
        args: >
          --enableRetired
          --enableExperimental
          --failOnCVSS 7

    - name: Upload Dependency Check results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dependency-check-report
        path: reports/
