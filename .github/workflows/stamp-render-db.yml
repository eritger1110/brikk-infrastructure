name: Stamp Render Database with Baseline

on:
  workflow_dispatch:
    inputs:
      baseline_revision:
        description: 'Baseline revision ID to stamp'
        required: true
        default: 'b07a366647c3'
        type: string

jobs:
  stamp-database:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Verify baseline revision exists
      run: |
        if [ ! -f "migrations/versions/${{ inputs.baseline_revision }}_baseline_schema.py" ]; then
          echo "ERROR: Baseline migration file not found!"
          exit 1
        fi
        echo "✓ Baseline migration file found: ${{ inputs.baseline_revision }}_baseline_schema.py"
        
    - name: Stamp Render database
      env:
        DATABASE_URL: ${{ secrets.RENDER_DATABASE_URL }}
      run: |
        echo "Stamping database with revision: ${{ inputs.baseline_revision }}"
        python -m alembic stamp ${{ inputs.baseline_revision }}
        echo "✓ Database stamped successfully"
        
    - name: Verify stamping
      env:
        DATABASE_URL: ${{ secrets.RENDER_DATABASE_URL }}
      run: |
        echo "Verifying alembic_version table..."
        python -c "
import os
from sqlalchemy import create_engine, text

engine = create_engine(os.environ['DATABASE_URL'])
with engine.connect() as conn:
    result = conn.execute(text('SELECT version_num FROM alembic_version'))
    version = result.fetchone()
    if version:
        print(f'✓ alembic_version: {version[0]}')
        if version[0] == '${{ inputs.baseline_revision }}':
            print('✓ Stamping verified successfully!')
        else:
            print(f'ERROR: Expected ${{ inputs.baseline_revision }}, got {version[0]}')
            exit(1)
    else:
        print('ERROR: No version found in alembic_version table')
        exit(1)
"
        
    - name: Summary
      run: |
        echo "================================================"
        echo "✓ Render database stamped successfully!"
        echo "  Baseline revision: ${{ inputs.baseline_revision }}"
        echo "================================================"
        echo ""
        echo "Next steps:"
        echo "1. Trigger a Render deployment"
        echo "2. Verify the app boots without DuplicateTable errors"
        echo "3. Disable or delete this workflow after successful deploy"

